/*
 * Copyright 2021-2024 Aion Technology LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'java'
    id 'jacoco'
}

group = 'io.aiontechnology'
version = "${version}"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

javadoc.options.addStringOption('Xdoclint:none', '-quiet')

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    assertjVersion='3.17.2'
    hamcrestVersion='1.3'
    junitVersion='5.6.2'
    lombokVersion='1.18.34'
    slf4jVersion='1.7.30'
}

dependencies {
    implementation "org.slf4j:slf4j-api:$slf4jVersion"

    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    testCompileOnly "org.projectlombok:lombok:$lombokVersion"
    testAnnotationProcessor "org.projectlombok:lombok:$lombokVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

//task sourcesJar(type: Jar, dependsOn: classes) {
//    classifier 'sources'
//    from sourceSets.main.allSource
//}

//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier 'javadoc'
//    from javadoc.destinationDir
//}

//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}

test {
    useJUnitPlatform()
}
